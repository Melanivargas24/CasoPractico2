// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Universidad.Models;

#nullable disable

namespace Universidad.Migrations
{
    [DbContext(typeof(EscuelaDbContext))]
    partial class EscuelaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Universidad.Models.Educador", b =>
                {
                    b.Property<int>("Id_Educador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Educador"));

                    b.Property<string>("Especialidad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id_Persona")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId_Persona")
                        .HasColumnType("int");

                    b.HasKey("Id_Educador");

                    b.HasIndex("PersonaId_Persona");

                    b.ToTable("Educadores");
                });

            modelBuilder.Entity("Universidad.Models.EducadorXMateria", b =>
                {
                    b.Property<int>("Id_Educador")
                        .HasColumnType("int");

                    b.Property<int>("Id_Materia")
                        .HasColumnType("int");

                    b.HasKey("Id_Educador", "Id_Materia");

                    b.HasIndex("Id_Materia");

                    b.ToTable("EducadorXMaterias");
                });

            modelBuilder.Entity("Universidad.Models.Estudiante", b =>
                {
                    b.Property<int>("Id_Estudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Estudiante"));

                    b.Property<int?>("GrupoId_Grupo")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Grupo")
                        .HasColumnType("int");

                    b.Property<int>("Id_Persona")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId_Persona")
                        .HasColumnType("int");

                    b.HasKey("Id_Estudiante");

                    b.HasIndex("GrupoId_Grupo");

                    b.HasIndex("PersonaId_Persona");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Universidad.Models.Grupo", b =>
                {
                    b.Property<int>("Id_Grupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Grupo"));

                    b.Property<int>("EducadorId_Educador")
                        .HasColumnType("int");

                    b.Property<int>("Id_Educador")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Grupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Grupo");

                    b.HasIndex("EducadorId_Educador");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Universidad.Models.Materia", b =>
                {
                    b.Property<int>("Id_Materia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Materia"));

                    b.Property<string>("Nombre_Materia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Materia");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("Universidad.Models.Nota", b =>
                {
                    b.Property<int>("Id_Nota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Nota"));

                    b.Property<decimal>("Calificacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstudianteId_Estudiante")
                        .HasColumnType("int");

                    b.Property<int>("Id_Estudiante")
                        .HasColumnType("int");

                    b.Property<int>("Id_Materia")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId_Materia")
                        .HasColumnType("int");

                    b.HasKey("Id_Nota");

                    b.HasIndex("EstudianteId_Estudiante");

                    b.HasIndex("MateriaId_Materia");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("Universidad.Models.Persona", b =>
                {
                    b.Property<int>("Id_Persona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Persona"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<DateTime>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id_Persona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Universidad.Models.Educador", b =>
                {
                    b.HasOne("Universidad.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId_Persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Universidad.Models.EducadorXMateria", b =>
                {
                    b.HasOne("Universidad.Models.Educador", "Educador")
                        .WithMany("EducadorXMaterias")
                        .HasForeignKey("Id_Educador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Models.Materia", "Materia")
                        .WithMany("EducadorXMaterias")
                        .HasForeignKey("Id_Materia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Educador");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("Universidad.Models.Estudiante", b =>
                {
                    b.HasOne("Universidad.Models.Grupo", "Grupo")
                        .WithMany("Estudiantes")
                        .HasForeignKey("GrupoId_Grupo");

                    b.HasOne("Universidad.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId_Persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Universidad.Models.Grupo", b =>
                {
                    b.HasOne("Universidad.Models.Educador", "Educador")
                        .WithMany("Grupos")
                        .HasForeignKey("EducadorId_Educador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Educador");
                });

            modelBuilder.Entity("Universidad.Models.Nota", b =>
                {
                    b.HasOne("Universidad.Models.Estudiante", "Estudiante")
                        .WithMany("Notas")
                        .HasForeignKey("EstudianteId_Estudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId_Materia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("Universidad.Models.Educador", b =>
                {
                    b.Navigation("EducadorXMaterias");

                    b.Navigation("Grupos");
                });

            modelBuilder.Entity("Universidad.Models.Estudiante", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("Universidad.Models.Grupo", b =>
                {
                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("Universidad.Models.Materia", b =>
                {
                    b.Navigation("EducadorXMaterias");
                });
#pragma warning restore 612, 618
        }
    }
}
